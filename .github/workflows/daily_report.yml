name: Daily Ping Report

on:
  schedule:
    - cron: "0 12 * * *"  # 台灣時間 20:00 (UTC+8)
  workflow_dispatch:

jobs:
  report:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq msmtp

      - name: Fetch today's workflow runs
        id: get_runs
        env:
          GITHUB_TOKEN: ${{ secrets.REPORT_PAT }}
        run: |
          TODAY=$(date -u +"%Y-%m-%d")
          echo "🔍 Today is: $TODAY (UTC)"

          # API 請求
          API_URL="https://api.github.com/repos/${{ github.repository }}/actions/workflows/157651133/runs?created=$TODAY&per_page=100"
          curl -s -f \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "$API_URL" > runs.json

          if [ $? -ne 0 ]; then
            echo "::error::API 請求失敗"
            exit 1
          fi

          # 計算統計數據
          TOTAL=$(jq '[.workflow_runs // [] | length] | max' runs.json)
          SUCCESS=$(jq '[.workflow_runs // [] | map(select(.conclusion == "success")) | length] | max' runs.json)
          FAIL=$(jq '[.workflow_runs // [] | map(select(.conclusion == "failure")) | length] | max' runs.json)

          # 輸出變數
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "success=$SUCCESS" >> $GITHUB_OUTPUT
          echo "fail=$FAIL" >> $GITHUB_OUTPUT

      - name: Generate report
        run: |
          # 基本報告
          echo "## 📊 每日 Ping 報告 - $(date -u +"%Y-%m-%d") (UTC+8)" > report.md
          echo "### 統計摘要" >> report.md
          echo "- 🟢 成功次數: ${SUCCESS:-0}" >> report.md
          echo "- 🔴 失敗次數: ${FAIL:-0}" >> report.md
          echo "- 🔵 總執行次數: ${TOTAL:-0}" >> report.md
          echo "" >> report.md

          # 台灣時間詳細表格
          echo "### 🕒 執行時間明細" >> report.md
          echo "| 運行編號 | 啟動時間 | 狀態 | 持續時間 | 詳細連結 |" >> report.md
          echo "|----------|----------|------|----------|----------|" >> report.md
          
          jq -r '
            (.workflow_runs // [])[] 
            | [
              "#\(.run_number)",
              (
                (.run_started_at | sub("\\.[0-9]+Z$"; "Z") | fromdateiso8601 + (8*3600)) 
                | strftime("%m/%d %H:%M:%S")
              ),
              (if .conclusion == "success" then "🟢" else "🔴" end),
              "\(( (.updated_at | fromdateiso8601) - (.run_started_at | fromdateiso8601) ) | floor /60) 分",
              "[查看](\(.html_url))"
              ] 
            | join("|")
          ' runs.json | while read -r line; do
            echo "|$line|" >> report.md
          done || echo "| - | - | - | - | 無執行紀錄 |" >> report.md

          # 添加分隔線
          echo "" >> report.md
          echo "---" >> report.md

          # 成功運行詳細資訊
          echo "### ✅ 成功運行列表" >> report.md
          jq -r '(.workflow_runs // [])[] 
            | select(.conclusion == "success")
            | "- [運行 #\(.run_number)]\(.html_url) (\(.updated_at | sub("\\.[0-9]+Z$"; "Z") | fromdateiso8601 | strftime("%H:%M:%S")))"
          ' runs.json >> report.md || echo "本日無成功運行紀錄" >> report.md

      - name: Show report
        run: cat report.md

      - name: Email report
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
        run: |
          # 配置 msmtp
          cat << EOF > ~/.msmtprc
          defaults
          auth           on
          tls            on
          tls_trust_file /etc/ssl/certs/ca-certificates.crt
          account        gmail
          host           smtp.gmail.com
          port           587
          from           $EMAIL_USER
          user           $EMAIL_USER
          password       $EMAIL_PASS
          account default : gmail
          EOF
          chmod 600 ~/.msmtprc

          # 發送郵件
          {
            echo "To: $EMAIL_TO"
            echo "From: $EMAIL_USER"
            echo "Subject: [Ping 報告] $(date -u +"%Y-%m-%d") 每日執行摘要"
            echo "Content-Type: text/html"
            echo ""
            echo "<pre style='font-family: Consolas, monospace;'>"
            cat report.md | sed 's/#/##/g'  # 調整標題層級適合郵件顯示
            echo "</pre>"
          } | msmtp --debug --from=default -t